# Generated by Django 3.0.2 on 2020-06-22 10:52

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(help_text='( Введите название категории )', max_length=300, unique=True, verbose_name='Название категории')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(help_text='( Введите название города )', max_length=100, unique=True, verbose_name='Название города')),
            ],
            options={
                'verbose_name': 'город',
                'verbose_name_plural': 'города',
            },
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('element_name', models.CharField(help_text='( Введите название элемента )', max_length=300, verbose_name='Название элемента')),
                ('element_address', models.CharField(blank=True, help_text='( Введите адрес элемента )', max_length=300, verbose_name='Адрес элемента')),
                ('element_preview_text', models.TextField(blank=True, help_text='( Введите краткое описание элемента )', max_length=1000, verbose_name='Краткое описание')),
                ('element_description', models.TextField(blank=True, help_text='( Введите подробное описание элемента )', verbose_name='Подробное описание')),
                ('element_preview_img', models.ImageField(blank=True, upload_to='images/elements', verbose_name='Картинка элемента')),
                ('element_phone', models.CharField(blank=True, help_text='( Номер телефона в формате: +999999999 )', max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Номер телефона')),
                ('element_email', models.EmailField(blank=True, help_text='( Добавьте адрес электронной почты )', max_length=254, unique=True, verbose_name='Электронный адрес элемента')),
                ('fact_value_1', models.CharField(blank=True, help_text='( Введите значение факта [1] для элемента )', max_length=100, verbose_name='Значение факта для элемента')),
                ('fact_desc_1', models.CharField(blank=True, help_text='( Введите описание факта [1] для элемента )', max_length=100, verbose_name='Описание факта для элемента')),
                ('fact_value_2', models.CharField(blank=True, help_text='( Введите значение факта [2] для элемента )', max_length=100, verbose_name='Значение факта для элемента')),
                ('fact_desc_2', models.CharField(blank=True, help_text='( Введите описание факта [2] для элемента )', max_length=100, verbose_name='Описание факта для элемента')),
                ('fact_value_3', models.CharField(blank=True, help_text='( Введите значение факта [3] для элемента )', max_length=100, verbose_name='Значение факта для элемента')),
                ('fact_desc_3', models.CharField(blank=True, help_text='( Введите описание факта [3] для элемента )', max_length=100, verbose_name='Описание факта для элемента')),
                ('rating', models.IntegerField(blank=True, default=0, null=True)),
                ('LPR_name', models.CharField(help_text='( Введите ФИО )', max_length=100, verbose_name='ФИО')),
                ('LPR_phone', models.CharField(blank=True, help_text='( Номер телефона в формате: +999999999 )', max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Номер телефона')),
                ('LPR_email', models.EmailField(blank=True, help_text='( Добавьте адрес электронной почты )', max_length=254, unique=True, verbose_name='Электронный адрес элемента')),
                ('LPR_link_vk', models.CharField(blank=True, help_text='( Добавьте ссылку на сообщество в ВК )', max_length=300, verbose_name='Ссылка на ВК')),
                ('fk_category', models.ForeignKey(help_text='( Выберите категорию из списка )', null=True, on_delete=django.db.models.deletion.SET_NULL, to='MarketPlace.Category', verbose_name='Категориия')),
                ('fk_city', models.ForeignKey(help_text='( Выберите город из списка )', null=True, on_delete=django.db.models.deletion.SET_NULL, to='MarketPlace.City', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'элемент',
                'verbose_name_plural': 'элементы',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(help_text='( Введите название тэга )', max_length=100, unique=True, verbose_name='Название тэга')),
                ('tag_desc', models.TextField(blank=True, help_text='( Введите подробное описание тэга )', verbose_name='Подробное описание')),
                ('fk_element', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MarketPlace.Element')),
            ],
            options={
                'verbose_name': 'тэг',
                'verbose_name_plural': 'тэги',
            },
        ),
        migrations.CreateModel(
            name='Poster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='images/posters', verbose_name='Изображение')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('fk_element', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MarketPlace.Element')),
            ],
            options={
                'verbose_name': 'афиша',
                'verbose_name_plural': 'афиша',
            },
        ),
        migrations.CreateModel(
            name='LinkList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('element_link', models.CharField(blank=True, max_length=300, verbose_name='Ссылка на элемент')),
                ('fk_element', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MarketPlace.Element')),
            ],
            options={
                'verbose_name': 'ссылка на элемент',
                'verbose_name_plural': 'ссылка на элемент',
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='images/gallery', verbose_name='Изображение')),
                ('fk_element', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MarketPlace.Element')),
            ],
            options={
                'verbose_name': 'галерея',
                'verbose_name_plural': 'галерея',
            },
        ),
    ]
